name: doxygen-check
on:
  workflow_call:
    secrets:
      APP_PRIVATE_KEY:
        required: true

jobs:
  DOXYGEN_CHECK:
    container:
      image: linuxdeepin/apricot:latest
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
        - /etc/machine-id:/etc/machine-id

    runs-on: ubuntu-latest
    env:
      APP_ID: 174141
      APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: init base environment
        run: |
          echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
          rm /etc/apt/sources.list
          echo "deb [trusted=yes] https://deepin-community.github.io/deepin-dde-repo apricot main\ndeb-src [trusted=yes] https://deepin-community.github.io/deepin-dde-repo apricot main" >> /etc/apt/sources.list
          echo "deb [trusted=yes] https://deepin-community.github.io/deepin-dde-deps-repo apricot main\ndeb-src [trusted=yes] https://deepin-community.github.io/deepin-dde-deps-repo apricot main" >> /etc/apt/sources.list
          echo "deb [trusted=yes] https://ftp.jaist.ac.jp/pub/Linux/deepin/ apricot main contrib non-free\ndeb-src [trusted=yes] https://ftp.jaist.ac.jp/pub/Linux/deepin/ apricot main contrib non-free" >> /etc/apt/sources.list
          apt-get update && apt-get install -y --force-yes ca-certificates apt-transport-https sudo

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - uses: linuxdeepin/action-doxygencheck@master
        with:
          pullRequestId: ${{ github.event.pull_request.number }}
          installDepends: true
          setFailed: false
          checkScope: "public"
          checkedSuffix: ".h,.hpp,.hxx"
          checkKind: "enum,enumvalue,friend,typedef,variable,function,signal,slot,class,union,define,namespace"
          genDocCommand: |
            cmake -Bbuild -DBUILD_DOCS=ON -DBUILD_TESTING=OFF -DDOXYGEN_GENERATE_XML=1 .
            cmake --build build --target doxygen
            python3 -m coverxygen --xml-dir=./build/docs/xml --src-dir . --format json --kind $CHECK_KIND --scope $CHECK_SCOPE --output $CHECK_RES

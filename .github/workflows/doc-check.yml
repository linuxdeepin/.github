name: doxygen-check
on:
  workflow_call:
    secrets:
      APP_ID:
        required: true
      APP_PRIVATE_KEY:
        required: true

jobs:
  DOXYGEN_CHECK:
    container:
      image: linuxdeepin/beige:base
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
        - /etc/machine-id:/etc/machine-id

    runs-on: ubuntu-latest
    env:
      APP_ID: ${{ secrets.APP_ID }}
      APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: init base environment
        shell: bash
        run: |
          echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
          rm /etc/apt/sources.list
          branch="${{ github.head_ref }}"
          echo "deb [trusted=yes] https://ci.deepin.com/repo/obs/deepin:/Develop:/community/deepin_develop/ ./" > /etc/apt/sources.list
          echo "deb-src [trusted=yes] https://ci.deepin.com/repo/obs/deepin:/Develop:/community/deepin_develop/ ./" >> /etc/apt/sources.list
          echo "deb [trusted=yes] https://ci.deepin.com/repo/obs/deepin:/Develop:/dde/deepin_develop/ ./" >> /etc/apt/sources.list
          echo "deb-src [trusted=yes] https://ci.deepin.com/repo/obs/deepin:/Develop:/dde/deepin_develop/ ./" >> /etc/apt/sources.list
          echo "deb [trusted=yes] https://ci.deepin.com/repo/obs/deepin:/Develop:/main/standard/ ./" >> /etc/apt/sources.list
          echo "deb-src [trusted=yes] https://ci.deepin.com/repo/obs/deepin:/Develop:/main/standard/ ./" >> /etc/apt/sources.list
          if [[ "$branch" =~ ^"topic-" ]]; then
            trimedBranch=${branch#topic-}
            echo "deb [trusted=yes] https://ci.deepin.com/repo/obs/deepin:/CI:/topics:/${trimedBranch}/deepin_develop/ ./" >> /etc/apt/sources.list
            echo "deb-src [trusted=yes] https://ci.deepin.com/repo/obs/deepin:/CI:/topics:/${trimedBranch}/deepin_develop/ ./" >> /etc/apt/sources.list
          fi
          apt-get update && apt-get install -y --force-yes ca-certificates apt-transport-https sudo
          sudo apt-get install -y --force-yes python3-pip python3-coverxygen

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - uses: linuxdeepin/action-doxygencheck@master
        with:
          pullRequestId: ${{ github.event.pull_request.number }}
          installDepends: true
          setFailed: false
          checkScope: "public"
          checkedSuffix: ".h,.hpp,.hxx"
          checkKind: "enum,enumvalue,friend,typedef,variable,function,signal,slot,class,union,define,namespace"
          genDocCommand: |
            cmake -Bbuild -DBUILD_DOCS=ON -DBUILD_TESTING=OFF -DDOXYGEN_GENERATE_XML=1 .
            cmake --build build --target doxygen
            python3 -m coverxygen --xml-dir=./build/docs/xml --src-dir . --format json --kind $CHECK_KIND --scope $CHECK_SCOPE --output $CHECK_RES

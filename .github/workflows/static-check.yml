name: Static Check
on: workflow_call

jobs:
  Get-Config:
    runs-on: ubuntu-latest
    outputs:
      isGo: ${{ steps.get-check-flag.outputs.isGo }}
      isC: ${{ steps.get-check-flag.outputs.isC }}
      isShell: ${{ steps.get-check-flag.outputs.isShell}}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false
      - name: Get Go Files
        id: get-go-files
        uses: SkyHighGrowth/gha-changed-files@v1.0.1
        with:
          files: |
            **.go
      - name: Get C Files
        id: get-c-files
        uses: SkyHighGrowth/gha-changed-files@v1.0.1
        with:
          files: |
            **.cpp
            **.cxx
            **.cc
            **.c++
            **.c
            **.ipp
            **.ixx
            **.tpp
            **.txx
      - name: Get Shell Files
        id: get-shell-files
        uses: SkyHighGrowth/gha-changed-files@v1.0.1
        with:
          files: |
            **.sh
            **.bash
      - name: get-check-flag
        id: get-check-flag
        run: |
          if [ "${{steps.get-go-files.outputs.all_changed_files}}" ];then
            echo "isGo=true" >> $GITHUB_OUTPUT
          fi
          if [ "${{steps.get-c-files.outputs.all_changed_files}}" ];then
            echo "isC=true" >> $GITHUB_OUTPUT
          fi
          if [ "${{steps.get-shell-files.outputs.all_changed_files}}" ];then
            echo "isShell=true" >> $GITHUB_OUTPUT
          fi
  Call-GolangCiLint:
    runs-on: ubuntu-latest
    needs: Get-Config
    if: needs.Get-Config.outputs.isGo == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Mod Check
        if: hashFiles('go.mod') == ''
        run: |
          go mod init ${{ github.repository }}
          go mod tidy
      - name: Config check
        if: hashFiles('.golangci.yml') == ''
        uses: actions/checkout@v4
        with:
          repository: kuchune/check-tools
          sparse-checkout: staticCheck/golangci.yml
          sparse-checkout-cone-mode: false
      - if: hashFiles('.golangci.yml') == ''
        run: mv staticCheck/golangci.yml .golangci.yml
      - name: GolangCILint Check
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.58
  Call-CppCheck:
    runs-on: ubuntu-latest
    needs: Get-Config
    if: needs.Get-Config.outputs.isC == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false
      - name: Static Check with C
        uses: linuxdeepin/action-cppcheck@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          pull_request_id: ${{ github.event.pull_request.number }}
          allow_approve: false
  Call-ShellCheck:
    runs-on: ubuntu-latest
    needs: Get-Config
    if: needs.Get-Config.outputs.isShell == 'true'
    steps:      
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false
      - uses: pr-annotators/shellcheck-pr-annotator@main
      - uses: ludeeus/action-shellcheck@master
        with:
          severity: error
          format: gcc
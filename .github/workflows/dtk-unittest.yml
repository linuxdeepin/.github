name: dtk unittest

on:
  workflow_call:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container:
      image: linuxdeepin/apricot
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
        - /etc/machine-id:/etc/machine-id
    steps:
      - uses: actions/checkout@v3
        if: ${{ github.event.pull_request.head.sha }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/checkout@v3
        if: ${{ github.event_name == 'push' }}

      - name: Install Dependences

        run: |
          echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
          apt-get update
          apt-get install -y libgtest-dev libgmock-dev ninja-build devscripts equivs dbus
          yes | mk-build-deps -i
      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -G Ninja -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build build

      - name: Test
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: |
          cd build
          if [ -e tests -a -d tests ]; then
              dbus-run-session -- ctest --test-dir tests -VV
          else
          for file in dtk*
          do
              if [ -d ${file} ]; then
              testdir=${file}/tests
              if [ -e ${testdir} -a -d ${testdir} ]; then
                  echo ${testdir}
                  dbus-run-session -- ctest --test-dir ${testdir} -VV
              fi
              fi
          done
          fi

name: deploy doc to gh-pages

on:
  workflow_call:

defaults:
  run:
    shell: bash

jobs:
  build:
    container:
      image: linuxdeepin/apricot:latest
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
        - /etc/machine-id:/etc/machine-id

    runs-on: ubuntu-latest
    steps:
      - name: init base environment
        run: |
          echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
          rm /etc/apt/sources.list
          echo "deb [trusted=yes] https://deepin-community.github.io/deepin-dde-repo apricot main\ndeb-src [trusted=yes] https://deepin-community.github.io/deepin-dde-repo apricot main" >> /etc/apt/sources.list
          echo "deb [trusted=yes] https://deepin-community.github.io/deepin-dde-deps-repo apricot main\ndeb-src [trusted=yes] https://deepin-community.github.io/deepin-dde-deps-repo apricot main" >> /etc/apt/sources.list
          echo "deb [trusted=yes] https://ftp.jaist.ac.jp/pub/Linux/deepin/ apricot main contrib non-free\ndeb-src [trusted=yes] https://ftp.jaist.ac.jp/pub/Linux/deepin/ apricot main contrib non-free" >> /etc/apt/sources.list
          apt-get update && apt-get install -y --force-yes ca-certificates apt-transport-https sudo
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false
      - name: Prepare
        run: |
          sudo apt-get install -y --force-yes doxygen
          sudo apt-get install -y --force-yes devscripts equivs git
          mk-build-deps
          sudo apt-get install -y --force-yes ./*.deb
          git clone https://github.com/linuxdeepin/doxygen-theme.git --depth=1
          sed -i "s|change address|https://github.com/linuxdeepin/$(basename `pwd`)|" doxygen-theme/doxygen-awesome-css/header.html
          sed -i "s|doxtime|$(date +"%Y-%m-%d-%R  %:::z")|" doxygen-theme/doxygen-awesome-css/footer.html

      - name: Build Docs
        run: |
          cmake -Bbuild -DBUILD_DOCS=ON -DBUILD_TESTING=OFF -DDOXYGEN_GENERATE_HTML="YES" -DDOXYGEN_GENERATE_TREEVIEW="YES" \
                        -DDOXYGEN_HTML_EXTRA_STYLESHEET="./doxygen-theme/doxygen-awesome-css/doxygen-awesome.css;\
                          ./doxygen-theme/doxygen-awesome-css/doxygen-awesome-sidebar-only.css;\
                          ./doxygen-theme/doxygen-awesome-css/doxygen-awesome-sidebar-only-darkmode-toggle.css"\
                        -DDOXYGEN_HTML_EXTRA_FILES="./doxygen-theme/doxygen-awesome-css/doxygen-awesome-darkmode-toggle.js;\
                          ./doxygen-theme/doxygen-awesome-css/doxygen-awesome-fragment-copy-button.js;\
                          ./doxygen-theme/doxygen-awesome-css/doxygen-awesome-paragraph-link.js;\
                          ./doxygen-theme/doxygen-awesome-css/doxygen-awesome-interactive-toc.js;"\
                        -DDOXYGEN_GENERATE_TREEVIEW="YES"\
                        -DDOXYGEN_DISABLE_INDEX="NO"\
                        -DDOXYGEN_FULL_SIDEBAR="NO"\
                        -DDOXYGEN_HTML_HEADER="./doxygen-theme/doxygen-awesome-css/header.html"\
                        -DDOXYGEN_HTML_FOOTER="./doxygen-theme/doxygen-awesome-css/footer.html"\
                        -DDOXYGEN_TAGFILES="qtcore.tags=http://doc.qt.io/qt-5/;qtwidgets/tags=http://doc.qt.io/qt-5/" .
          cmake --build build --target doxygen
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./build/docs/html
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
